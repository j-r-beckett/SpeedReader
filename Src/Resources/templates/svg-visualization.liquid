<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 {{ Width }} {{ Height }}" width="{{ Width }}" height="{{ Height }}">
  <defs>
    <style>
      .bounding-box { fill: none; stroke: red; stroke-width: 2; }
      .dbnet-overlay { opacity: 0.5; }

      .legend {
        font-family: Arial, sans-serif;
        font-size: {{ Width | divided_by: 65 }}px;
        background: rgba(0, 0, 0, 0.2);
        border: 1px solid rgba(0, 0, 0, 0.5);
        border-radius: 12px;
        padding: {{ Width | divided_by: 100 }}px;
        display: flex;
        flex-direction: column;
        gap: {{ Width | divided_by: 100 }}px;
        width: fit-content;
      }
      .legend-item {
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: {{ Width | divided_by: 75 }}px;
        color: white;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
        user-select: none;
      }
      .legend-item:hover { color: #ddd; }
      .legend-swatch {
        width: {{ Width | divided_by: 50 }}px;
        height: 6px;
        border-radius: 3px;
      }
      .hidden { display: none; }
    </style>
  </defs>

  <image width="{{ Width }}" height="{{ Height }}" xlink:href="{{ BaseImageDataUri }}" />

  {% if ProbabilityMapDataUri %}
  <g class="dbnet-overlay">
    <image width="{{ Width }}" height="{{ Height }}" xlink:href="{{ ProbabilityMapDataUri }}" />
  </g>
  {% endif %}

  <g class="bounding-boxes">
    {% for box in BoundingBoxes %}
    <rect class="bounding-box" x="{{ box.X }}" y="{{ box.Y }}" width="{{ box.Width }}" height="{{ box.Height }}" />
    {% endfor %}
  </g>

  <foreignObject x="{{ Width | divided_by: 50 }}" y="{{ Width | divided_by: 50 }}" width="300" height="200">
    <div class="legend" xmlns="http://www.w3.org/1999/xhtml">
      {% for item in LegendItems %}
      <div class="legend-item" onclick="toggleLayer('{{ item.ElementClass }}')" data-class="{{ item.ElementClass }}">
        <div class="legend-swatch" style="background-color: {{ item.Color }};"></div>
        <span>{{ item.Description }}</span>
      </div>
      {% endfor %}
    </div>
  </foreignObject>

  <script>
    <![CDATA[
    function toggleLayer(className) {
      var elements = document.querySelectorAll('.' + className);
      var legendItem = document.querySelector('.legend-item[data-class="' + className + '"]');
      for (var i = 0; i < elements.length; i++) {
        var element = elements[i];
        if (element.classList.contains('hidden')) {
          element.classList.remove('hidden');
          legendItem.style.opacity = '1';
        } else {
          element.classList.add('hidden');
          legendItem.style.opacity = '0.5';
        }
      }
    }
    ]]>
  </script>
</svg>
